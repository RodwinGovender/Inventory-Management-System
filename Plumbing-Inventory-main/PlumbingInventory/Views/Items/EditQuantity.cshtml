@model PlumbingInventory.Models.ItemRecord

@{
    ViewBag.Title = "EditQuantity2";
}

<h2>EditQuantity2</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ItemRecord</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ItemRecord_ID)
    @Html.HiddenFor(model => model.Item_ID)
    @Html.HiddenFor(model => model.Job_ID)


    <div class="row">

        <div class="col-md-6">
            <div class="card border-secondary mb-3" style="max-width: 20rem;">
                <div class="card-header">Item Page</div>
                <div class="card-body">
                    @if (Model.Item.Image != null)
                    {
                        var base64 = Convert.ToBase64String(Model.Item.Image);
                        var ImgSource = string.Format("data:image/gif;base64,{0}", base64);
                        <img src="@ImgSource" alt="Card image" width="100%" height="200px" />
                    }
                    else
                    {

                        <img src="~/Image/noImage.jpg" alt="Card image" width="100%" height="200px" />

                    }
                </div>
            </div>



        </div>
        <div class="col-md-6">
            <div class="card border-secondary mb-3" style="max-width: 20rem;">
                <div class="card-header">Item Details</div>
                <div class="card-body">
                    <dl class="dl-horizontal">

                        <dt>
                            @Html.DisplayNameFor(model => model.Item.ItemCat.ItemCat_Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Item.ItemCat.ItemCat_Name)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Item.Item_Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Item.Item_Name)
                        </dd>

                        <dt>
                            Inventory Amount
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Item.Item_Qty)
                        </dd>
                    </dl>

                    <br />

                    <dl class="dl-horizontal">
                        <dt>
                            Assigned To Job
                        </dt>

                        <dd>
                            @Model.Job.Job_Name
                        </dd>

                        <dt>
                            Quantity Used
                        </dt>

                        <dd>
                            @Html.EditorFor(model => model.ItemRecord_QtyUsed, new { htmlAttributes = new { @class = "form-control", min = 0, max = Model.Item.Item_Qty + Model.ItemRecord_QtyUsed } })
                            @Html.ValidationMessageFor(model => model.ItemRecord_QtyUsed, "", new { @class = "text-danger" })
                        </dd>
                    </dl>

                    <br />
                    <center>
                        <input type="submit" value="Update Quantity" class="btn btn-primary" />
                    </center>
                </div>
            </div>


        </div>

    </div>


    @*<div class="form-group">
        @Html.LabelFor(model => model.ItemRecord_QtyUsed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ItemRecord_QtyUsed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ItemRecord_QtyUsed, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Item_ID, "Item_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Display("Item_ID")
            @Html.ValidationMessageFor(model => model.Item_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job_ID, "Job_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Display("Job_ID")
            @Html.ValidationMessageFor(model => model.Job_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>*@
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
